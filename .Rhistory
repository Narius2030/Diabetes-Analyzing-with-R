install.packages(c("googledrive", "readr"))
library(googledrive)
library(readr)
setwd("D:/DaiHoc/nam3/R/PJCuoiKi")
install.packages(c("googledrive", "readr"))
library(googledrive)
library(readr)
install.packages(c("googledrive", "readr"))
# Đường link chia sẻ của file CSV trên Google Drive
link<-"https://drive.google.com/file/d/15mjrv0LV2T6GWNdAuW-QhXVdtMkQALlh/view?usp=drive_link"
# Lấy ID của file từ đường link
file_id <- gsub(".*/([^/]+)/.*", "\\1", link)
# Xây dựng đường link thực tế cho Google Drive API
drive_link <- sprintf("https://drive.google.com/uc?id=%s", file_id)
diabetes<-read_csv(drive_link)
# Đường link chia sẻ của file CSV trên Google Drive
link<-"https://drive.google.com/file/d/15mjrv0LV2T6GWNdAuW-QhXVdtMkQALlh/view?usp=drive_link"
# Lấy ID của file từ đường link
file_id <- gsub(".*/([^/]+)/.*", "\\1", link)
# Xây dựng đường link thực tế cho Google Drive API
drive_link <- sprintf("https://drive.google.com/uc?id=%s", file_id)
diabetes<-read_csv(drive_link)
# Đường link chia sẻ của file CSV trên Google Drive
link <- "https://drive.google.com/file/d/15mjrv0LV2T6GWNdAuW-QhXVdtMkQALlh/view?usp=drive_link"
# Lấy ID của file từ đường link
file_id <- gsub(".*/([^/]+)/.*", "\\1", link)
# Xây dựng đường link thực tế cho Google Drive API
drive_link <- sprintf("https://drive.google.com/uc?id=%s", file_id)
# Đọc file CSV trực tiếp từ đường link
diabetes <- read_csv(drive_link)
library(googledrive)
library(readr)
library(googledrive)
library(readr)
# Đường link chia sẻ của file CSV trên Google Drive
link <- "https://drive.google.com/file/d/15mjrv0LV2T6GWNdAuW-QhXVdtMkQALlh/view?usp=drive_link"
# Lấy ID của file từ đường link
file_id <- gsub(".*/([^/]+)/.*", "\\1", link)
# Xây dựng đường link thực tế cho Google Drive API
drive_link <- sprintf("https://drive.google.com/uc?id=%s", file_id)
# Đọc file CSV trực tiếp từ đường link
diabetes <- read_csv(drive_link)
# Hiển thị dữ liệu
print(diabetes)
# Đường link chia sẻ của file CSV trên Google Drive
link <- "https://drive.google.com/file/d/15mjrv0LV2T6GWNdAuW-QhXVdtMkQALlh/view?usp=drive_link"
# Lấy ID của file từ đường link
file_id <- gsub(".*/([^/]+)/.*", "\\1", link)
print(file_id)
# Xây dựng đường link thực tế cho Google Drive API
drive_link <- sprintf("https://drive.google.com/uc?id=%s", file_id)
# Đọc file CSV trực tiếp từ đường link
diabetes <- read_csv(drive_link)
# Hiển thị dữ liệu
diabetes
# Đọc file CSV trực tiếp từ đường link
diabetes <- read_csv("https://drive.google.com/uc?id=15mjrv0LV2T6GWNdAuW-QhXVdtMkQALlh")
# Hiển thị dữ liệu
diabetes
# Đọc file CSV trực tiếp từ đường link
diabetes <- read_csv("https://drive.google.com/uc?id=15mjrv0LV2T6GWNdAuW-QhXVdtMkQALlh")
# Hiển thị dữ liệu
diabetes
# Đọc file CSV trực tiếp từ đường link
diabetes <- read_csv("https://drive.google.com/uc?id=15mjrv0LV2T6GWNdAuW-QhXVdtMkQALlh")
spec(diabetes)
# Hiển thị dữ liệu
diabetes
install.packages("readr")
install.packages("readr")
library(readr)
library(readr)
# Đọc file CSV trực tiếp từ đường link
diabetes <- read_csv("https://drive.google.com/uc?id=15mjrv0LV2T6GWNdAuW-QhXVdtMkQALlh")
spec(diabetes)
# Hiển thị dữ liệu
diabetes
head(diabetes)
summary(diabetes)
str(diabetes)
# Đọc file CSV trực tiếp từ đường link
diabetes <- read_csv("https://drive.google.com/uc?id=15mjrv0LV2T6GWNdAuW-QhXVdtMkQALlh")
suppressMessages(spec(diabetes))
# Hiển thị dữ liệu
diabetes
str(diabetes)
str(diabetes)
colnames(diabetes)
# Định nghĩa hàm thống kê cho mỗi cột
summary_stats <- function(column) {
mean_value <- mean(column, na.rm = TRUE)
median_value <- median(column, na.rm = TRUE)
# Tính giá trị phổ biến (mode)
frequency_table <- table(column)
mode_value <- as.numeric(names(frequency_table)[which.max(frequency_table)])
# Tạo một list chứa các giá trị thống kê
result <- list(
Mean = mean_value,
Median = median_value,
Mode = mode_value
)
return(result)
}
# Sử dụng lapply để áp dụng hàm cho mỗi cột của dataframe
column_stats <- lapply(diabetes, summary_stats)
# In kết quả
print(column_stats)
na_count<-colSums(diabetes)
na_count<-colSums(diabetes,is.na)
na_count<-colSums(diabetes,is.na)
na_count<-colSums(sapply(diabetes,is.na))
na_count
library(readr)
library(dplyr)
library(readr)
library(dplyr)
library(readr)
library(dplyr)
diabetes_median<- diabetes %>%
na.aggregate(type = "median", na.rm = TRUE)
diabetes_median<- diabetes %>%
na.aggregate(type = "median", na.rm = TRUE)
diabetes_median<- diabetes %>%
na.aggregate(type = "median", na.rm = TRUE)
diabetes_median<- diabetes %>%
na.aggregate(type = "median", na.rm = TRUE)
install.packages(c("dplyr", "zoo"))
install.packages(c("dplyr", "zoo"))
library(readr)
library(dplyr)
library(zoo)
library(readr)
library(dplyr)
library(zoo)
diabetes_median <- diabetes %>%
na.aggregate(type = "median", na.rm = TRUE)
diabetes_median <- diabetes %>%
na.aggregate(type = "median", na.rm = TRUE)
diabetes_median
diabetes_median <- diabetes %>%
na.aggregate(type = "mean", na.rm = TRUE)
diabetes_median <- diabetes %>%
na.aggregate(type = "mean", na.rm = TRUE)
diabetes_mean <- diabetes %>%
mutate_all(~ ifelse(is.na(.), mean(., na.rm = TRUE), .))
diabetes_median <- diabetes %>%
mutate_all(~ ifelse(is.na(.), median(., na.rm = TRUE), .))
fill_mode <- function(x) {
mode_val <- names(sort(table(x), decreasing = TRUE))[1]
x[is.na(x)] <- mode_val
return(x)
}
diabetes_mode <- diabetes %>%
mutate_all(fill_mode)
fill_mode <- function(x) {
mode_val <- names(sort(table(x), decreasing = TRUE))[1]
x[is.na(x)] <- mode_val
return(x)
}
diabetes_mode <- diabetes %>%
mutate_all(fill_mode)
diabetes_mode
fill_mode <- function(x) {
mode_val <- names(sort(table(x), decreasing = TRUE))[1]
x[is.na(x)] <- mode_val
return(x)
}
diabetes_mode <- diabetes %>%
mutate_all(fill_mode)
x <- c("A", "B", "A", "C", "B", "A", "A", "C")
x
#> A B C
#> 4 2 2
fill_mode <- function(x) {
mode_val <- names(sort(table(x), decreasing = TRUE))[1]
x[is.na(x)] <- mode_val
return(x)
}
diabetes_mode <- diabetes %>%
mutate_all(fill_mode)
x <- c("A", "B", "A", "C", "B", "A", "A", "C")
table(x)
#> A B C
#> 4 2 2
fill_mode <- function(x) {
mode_val <- names(sort(table(x), decreasing = TRUE))[1]
x[is.na(x)] <- mode_val
return(x)
}
diabetes_mode <- diabetes %>%
mutate_all(fill_mode)
boxplot(diabetes,main="Boxplot of Data")
boxplot(diabetes,main="Boxplot of Data")
z_scores <- scale(data)
boxplot(diabetes,main="Boxplot of Data")
# Giả sử diabetes là dataframe của bạn
diabetes_z <- scale(diabetes)
boxplot(diabetes,main="Boxplot of Data")
# Giả sử diabetes là dataframe của bạn
diabetes_z <- scale(diabetes)
diabetes_z
diabetes_features <- diabetes %>%
select(-'Outcome')
diabetes_z <- scale(diabetes)
diabetes_z
diabetes_features <- diabetes %>%
select(-'Outcome')
diabetes_z <- scale(diabetes)
diabetes_z
diabetes_features <- diabetes %>%
select(-'Outcome')
diabetes_z <- scale(diabetes_features)
diabetes_z
# Vẽ biểu đồ heatmap của ma trận Z-score
heatmap(diabetes_z,
main = "Heatmap of Z-scores",
xlab = "Features",
ylab = "Observations",
col = colorRampPalette(c("blue", "white", "red"))(50))  # Chọn màu sắc
install.packages("readr")
install.packages(c("dplyr", "zoo"))
install.packages("pheatmap")
install.packages("readr")
library(readr)
library(dplyr)
library(zoo)
library(pheatmap)
library(readr)
library(dplyr)
library(zoo)
library(pheatmap)
library(readr)
library(dplyr)
library(zoo)
library(pheatmap)
install.packages("readr")
install.packages(c("dplyr", "zoo"))
install.packages("pheatmap")
library(readr)
library(dplyr)
library(zoo)
library(pheatmap)
library(readr)
library(dplyr)
library(zoo)
library(pheatmap)
library(readr)
library(dplyr)
library(zoo)
library(pheatmap)
pheatmap(diabetes_z,
main = "Heatmap of Z-scores",
cluster_cols = FALSE,  # Không gom cột
cluster_rows = FALSE)  # Không gom hàng
# Vẽ scatter plot cho toàn bộ dataframe
pairs(diabetes_z, main = "Scatter Plot of Z-scores")
library(readr)
library(dplyr)
library(zoo)
library(ggplot2)
install.packages("readr")
install.packages(c("dplyr", "zoo"))
install.packages("ggplot2")
install.packages("readr")
install.packages(c("dplyr", "zoo"))
install.packages("ggplot2")
install.packages("readr")
install.packages(c("dplyr", "zoo"))
install.packages("ggplot2")
library(readr)
library(dplyr)
library(zoo)
library(ggplot2)
library(readr)
library(dplyr)
library(zoo)
library(ggplot2)
# Duyệt qua từng cột trong dataframe
for (col in colnames(diabetes_z)) {
# Tạo dataframe từ cột đó
df <- data.frame(x = seq_along(diabetes_z[, col]), y = diabetes_z[, col])
ggplot(df, aes(x = x, y = y)) +
geom_point() +
labs(x = "Index", y = paste("Z-score ", col), title = paste("Scatter Plot of Z-scores -", col))
}
# Duyệt qua từng cột trong dataframe
for (col in colnames(diabetes_z)) {
# Tạo dataframe từ cột đó
df <- data.frame(x = seq_along(diabetes_z[, col]), y = diabetes_z[, col])
ggplot(df, aes(x = x, y = y)) +
geom_point() +
labs(x = "Index", y = paste("Z-score ", col), title = paste("Scatter Plot of Z-scores -", col))
}
# Duyệt qua từng cột trong dataframe
for (col in colnames(diabetes_z)) {
# Tạo dataframe từ cột đó
df <- data.frame(x = seq_along(diabetes_z[, col]), y = diabetes_z[, col])
# Vẽ scatter plot bằng ggplot2 và sử dụng print để hiển thị
print(ggplot(df, aes(x = x, y = y)) +
geom_point() +
labs(x = "Index", y = paste("Z-score ", col), title = paste("Scatter Plot of Z-scores -", col))
)
}
# Duyệt qua từng cột trong dataframe
for (col in colnames(diabetes_z)) {
# Tạo dataframe từ cột đó
df <- data.frame(x = seq_along(diabetes_z[, col]), y = diabetes_z[, col])
# Vẽ scatter plot bằng ggplot2 và sử dụng print để hiển thị
print(ggplot(df, aes(x = x, y = y, color = y)) +
geom_point() +
labs(x = "Index", y = paste("Z-score ", col), title = paste("Scatter Plot of Z-scores -", col))
)
}
# Duyệt qua từng cột trong dataframe
for (col in colnames(diabetes_z)) {
# Tạo dataframe từ cột đó
df <- data.frame(x = seq_along(diabetes_z[, col]), y = diabetes_z[, col])
# Vẽ scatter plot bằng ggplot2 và sử dụng print để hiển thị
print(ggplot(df, aes(x = x, y = y, color = y)) +
geom_point() +
labs(x = "Index", y = paste("Z-score ", col), title = paste("Scatter Plot of Z-scores -", col))
)
}
diabetes_features <- diabetes %>%
select(-'Outcome')
diabetes_z <- scale(diabetes_features)
diabetes_z
Z-score (z-score standardization) được tính bằng cách sử dụng công thức sau:
Z-score (z-score standardization) được tính bằng cách sử dụng công thức sau:
Z-score (z-score standardization) được tính bằng cách sử dụng công thức sau:
Z-score (z-score standardization) được tính bằng cách sử dụng công thức sau:
